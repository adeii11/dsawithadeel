class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates) 
        return comb(candidates,new ArrayList<>(),new ArrayList<>(),target,0);
    }
    private List<List<Integer>> comb(int[] candidates,List<Integer> inner,List<List<Integer>> outer,int target,int index){
        if(target==0){
            outer.add(new ArrayList<>(inner));
            return outer;
        }
        for(;index<candidates.length;index++){
            if(target-candidates[index]<0)  return outer;
            inner.add(candidates[index]);
            comb(candidates,inner,outer,target-candidates[index],index);
            inner.remove(inner.size()-1);
        }
        return outer;
    }
}
